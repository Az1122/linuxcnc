[[cha:updating-linuxcnc]] (((Updating LinuxCNC)))

= Updating LinuxCNC

This section describes how to upgrade LinuxCNC from version 2.7 to the
new version.  It assumes that you have an existing 2.7 install that you
want to update.

To upgrade LinuxCNC from a version older than 2.7, you have to first
http://linuxcnc.org/docs/2.7/html/getting-started/updating-linuxcnc.html[upgrade
your old install to 2.7], then follow these instructions to upgrade to
the new version.

If you do not have an old version of LinuxCNC to upgrade, then you're
best off making a fresh install of the new version as described in the
section <<cha:getting-linuxcnc,Getting LinuxCNC>>.


== Upgrade to the new version

The basic idea is to disable the old linuxcnc.org apt sources and add
a new linuxcnc.org apt source for 2.7, then upgrade LinuxCNC.

The details will depend on which platform you're running on.
Run `lsb_release -ic` to find this information out:

-----
> lsb_release -ic
Distributor ID: Debian
Codename:       wheezy
-----

You should be running on Debian Wheezy (as above), or Ubuntu Precise,
or Ubuntu Lucid.


=== Setting apt sources

* Open the `Software Sources` window. The process for doing this
  differs slightly on the three supported platforms:

** Debian Wheezy:

*** Click on `Applications Menu`, then `System`, then
  `Synaptic Package Manager`.

*** In Synaptic, click on the `Settings` menu, then click `Repositories`
  to open the `Software Sources` window.

** Ubuntu Precise:

*** Click on the `Dash Home` icon in the top left.

*** In the `Search` field, type "software", then click on the `Ubuntu
  Software Center` icon.

*** In the Ubuntu Software Center window, click on the `Edit` menu,
  then click on `Software Sources...` to open the `Software Sources`
  window.

** Ubuntu Lucid:

*** Click the `System` menu, then `Administration`, then
  `Synaptic Package Manager`.

*** In Synaptic, click on the `Settings` menu, then click `Repositories`
  to open the `Software Sources` window.

* In the `Software Sources` window, select the `Other Software` tab.

* Delete or un-check all the old linuxcnc.org entries (leave all
  non-linuxcnc.org lines as they are).

* Click the `Add` button and add a new apt line. The line will be
  slightly different on the different platforms:

[options="header"]
|====
| Platform       | apt source line
| Debian Wheezy  | `deb http://linuxcnc.org wheezy base 2.7-rtai`
| Ubuntu Precise | `deb http://linuxcnc.org precise base 2.7-rtai`
| Ubuntu Lucid   | `deb http://linuxcnc.org lucid base 2.7-rtai`
|====

image::images/upgrading-to-2.7.png[align="left"]

* Click `Add Source`, then `Close` in the Software Sources window.
  If it pops up a window informing you that the information about
  available software is out-of-date, click the `Reload` button.


=== Upgrading to the new version

Now your computer knows where to get the new version of the software,
next we need to install it.

The process again differs depending on your platform.

==== Debian Wheezy and Ubuntu Lucid

Debian Wheezy and Ubuntu Lucid both use the Synaptic Package Manager.

* Open Synaptic using the instructions in <<_setting_apt_sources,Setting
  apt sources>> above.

* Click the `Reload` button.

* Use the Search function to search for `linuxcnc`.

* Click the check box to mark the new linuxcnc and linuxcnc-doc-*
  packages for upgrade. The package manager may select a number of
  additional packages to be installed, to satisfy dependencies that the
  new linuxcnc package has.

* Click the `Apply` button, and let your computer install the new
  package. The old linuxcnc package will be automatically upgraded to
  the new one.


=== Ubuntu Precise

* Click on the `Dash Home` icon in the top left.

* In the `Search` field, type "update", then click on the `Update Manager`
  icon.

* Click the `Check` button to fetch the list of packages available.

* Click the `Install Updates` button to install the new versions of
  all packages.


== Updating Configuration Files

The new version of LinuxCNC differs from version 2.7 in some ways that
may require changes to your machine configuration.


=== This way

Do this.


=== That way

Do that.


=== The other way

Do the other thing.

== Halui support for teleop jogging (Joints_axes)

Halui now supports teleop jogging resulting in some
changed pin names and numerous new names for jogging-related
pins.

    
Two pins were renamed to clarify usage (joint or axis):
      was: halui.jog-speed          is: halui.joint.jog-speed
      was: halui.jog-deadband       is: halui.joint.jog-deadband
The corresponding new pins for axis jogging are:
                                   new: halui.axis.jog-speed
                                   new: halui.axis.jog-deadband
    
All pins for joint jogging were renamed for specificity:
      was: halui.jog.N.plus         is: halui.joint.N.plus
      was: halui.jog.N.minus        is: halui.joint.N.minus
           ...  etc                     ... etc
    where N is a joint number (0 ... num_noints-1) or 'selected'
    for the joint selected by the halui.joint.N.select pins.
    
The corresponding new pins for axis jogging are:
                                   new: halui.axis.L.plus
                                   new: halui.axis.L.minus
                                        ... etc
where L is a letter corresponding to one of the axes
specified by [TRAJ]COORDINATES using an axis_mask or 'selected'
for the axis selected by the halui.axis.L.select pins.

Aditional pin renames for consistency to related pins:
      was: halui.joint.selected.is_homed
       is: halui.joint.selected.is-homed
    
      was: halui.joint.selected.on-soft-limit
       is: halui.joint.selected.on-soft-min-limit

See the man page ($ man halui) for pin names.


LOCKING_ROTARY_INDEXER

With JOINTS_AXES, an indexer is a joint that can be homed (joint mode)
but also must be locked from gcode.   Specify the joint number that
corresponds to the AXIS (A,B, or C) with:

  [AXIS_A]LOCKING_INDEXER_JOINT = joint_number_for_indexer (typ 3)
  [AXIS_B]LOCKING_INDEXER_JOINT = joint_number_for_indexer (typ 4)
  [AXIS_C]LOCKING_INDEXER_JOINT = joint_number_for_indexer (typ 5)

The typ values are for a machine with XYZ plus one or more rotary axes
(A,B,C) and IDENTITY kins.  For more complex kinematics, select the
joint number as required -- there must be a one-to-one correspondence
for the joint number and the rotary axis.

The hal pins for unlocking a joint (joint.N.unlock, joint.N.is-locked)
are created by specifying the motmod parameter unlock_joints_mask=
  [EMCMOT]motmod unlock_joints_mask=MASK

Examples (for an XYZ plus rotary machine):
  [EMCMOT]motmod unlock_joints_mask=0x08 (for joint 3)
  [EMCMOT]motmod unlock_joints_mask=0x10 (for joint 4)
  [EMCMOT]motmod unlock_joints_mask=0x20 (for joint 5)
  [EMCMOT]motmod unlock_joints_mask=0x38 (for joints 3,4, and 5)

Former ini item no longer used (superseded by LOCKING_INDEXER_JOINT):
not used: [AXIS_A]LOCKING_INDEXER = 1|0
not used: [AXIS_B]LOCKING_INDEXER = 1|0
not used: [AXIS_C]LOCKING_INDEXER = 1|0

// vim: set syntax=asciidoc:
